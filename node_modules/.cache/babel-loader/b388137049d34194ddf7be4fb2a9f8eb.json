{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Desktop\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\Paginado\\\\Paginado.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport s from './Paginado.module.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginado(_ref) {\n  _s();\n\n  let {\n    recipesPerPage,\n    allRecipes,\n    paginado,\n    currentPage,\n    handlePrevBut,\n    handleNextBut\n  } = _ref;\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const pageNumberLimit = 5; //total de paginas que quiero renderizar\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(3);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0); // const renderPageNumbers= pageNumber.map((number)=>{\n  //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\n  //         return(\n  //             <li \n  //             key={number} \n  //             id={number} \n  //             onClick={paginado}\n  //             className={currentPage === number? \"active\" : null} >\n  //                 {number}\n  //             </li>\n  //         )\n  //     }else{\n  //         return null;\n  //     }\n  // }) \n  // const paginateMas = () => setCurrentPage(currentPage + 1)\n  // const paginateMenos = () => setCurrentPage(currentPage - 1)\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.pageNumbers,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentPage > 1 ? s.prevBut : s.noPrevBut,\n          onClick: handlePrevBut,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), pageNumber.map(number => {\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: number,\n          onClick: () => paginado(number) // className={currentPage === number? \"active\" : null}\n          ,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentPage !== pageNumber.length ? s.prevBut : s.noPrevBut,\n          onClick: handleNextBut && setmaxPageNumberLimit(maxPageNumberLimit + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paginado, \"THHRB/x3GMLic9EVIoVFqY5EiLM=\");\n\n_c = Paginado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","s","useState","Paginado","recipesPerPage","allRecipes","paginado","currentPage","handlePrevBut","handleNextBut","pageNumber","i","Math","ceil","push","pageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","pageNumbers","prevBut","noPrevBut","map","number","length"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/components/Paginado/Paginado.js"],"sourcesContent":["import React from \"react\";\r\nimport s from './Paginado.module.css';\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nexport default function Paginado ({recipesPerPage, allRecipes, paginado, currentPage, handlePrevBut, handleNextBut}){\r\n    const pageNumber = []\r\n    for(let i=1; i<=Math.ceil( allRecipes / recipesPerPage ); i++){\r\n        pageNumber.push(i)\r\n    }\r\n    const pageNumberLimit= 5; //total de paginas que quiero renderizar\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(3);\r\n    const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\r\n    // const renderPageNumbers= pageNumber.map((number)=>{\r\n        \r\n    //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\r\n    //         return(\r\n    //             <li \r\n    //             key={number} \r\n    //             id={number} \r\n    //             onClick={paginado}\r\n    //             className={currentPage === number? \"active\" : null} >\r\n    //                 {number}\r\n    //             </li>\r\n    //         )\r\n    //     }else{\r\n    //         return null;\r\n    //     }\r\n    // }) \r\n    // const paginateMas = () => setCurrentPage(currentPage + 1)\r\n    // const paginateMenos = () => setCurrentPage(currentPage - 1)\r\n\r\n    \r\n    return (\r\n        <nav>\r\n            <ul className={s.pageNumbers}>\r\n                <li>\r\n                    <button className={currentPage>1?s.prevBut:s.noPrevBut} onClick={handlePrevBut}>Prev</button>\r\n                </li>\r\n                {pageNumber.map((number)=>{\r\n                    \r\n                if(number < maxPageNumberLimit+1 && number > minPageNumberLimit)\r\n                return (\r\n                    <li \r\n                key={number} \r\n                id={number} \r\n                onClick={()=>paginado(number)}\r\n                // className={currentPage === number? \"active\" : null}\r\n                 >\r\n                    {number}\r\n                </li>\r\n                )\r\n                })\r\n                }\r\n                {/* {pageNumber && pageNumber.map(num=>(\r\n                    <li key={num} id={num}>\r\n                       <a onClick={()=>paginado(num)}>{num}</a> \r\n                    </li>\r\n                ))} */}\r\n                <li>\r\n                    <button className={currentPage!==pageNumber.length?s.prevBut:s.noPrevBut} onClick={handleNextBut && setmaxPageNumberLimit(maxPageNumberLimit+1)}>Next</button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,eAAe,SAASC,QAAT,OAAqG;EAAA;;EAAA,IAAlF;IAACC,cAAD;IAAiBC,UAAjB;IAA6BC,QAA7B;IAAuCC,WAAvC;IAAoDC,aAApD;IAAmEC;EAAnE,CAAkF;EAChH,MAAMC,UAAU,GAAG,EAAnB;;EACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEC,IAAI,CAACC,IAAL,CAAWR,UAAU,GAAGD,cAAxB,CAAhB,EAA0DO,CAAC,EAA3D,EAA8D;IAC1DD,UAAU,CAACI,IAAX,CAAgBH,CAAhB;EACH;;EACD,MAAMI,eAAe,GAAE,CAAvB,CALgH,CAKtF;;EAC1B,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA6Cf,QAAQ,CAAC,CAAD,CAA3D;EACA,MAAM,CAACgB,kBAAD,EAAqBC,qBAArB,IAA6CjB,QAAQ,CAAC,CAAD,CAA3D,CAPgH,CAQhH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACI;IAAA,uBACI;MAAI,SAAS,EAAED,CAAC,CAACmB,WAAjB;MAAA,wBACI;QAAA,uBACI;UAAQ,SAAS,EAAEb,WAAW,GAAC,CAAZ,GAAcN,CAAC,CAACoB,OAAhB,GAAwBpB,CAAC,CAACqB,SAA7C;UAAwD,OAAO,EAAEd,aAAjE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,EAIKE,UAAU,CAACa,GAAX,CAAgBC,MAAD,IAAU;QAE1B,IAAGA,MAAM,GAAGR,kBAAkB,GAAC,CAA5B,IAAiCQ,MAAM,GAAGN,kBAA7C,EACA,oBACI;UAEJ,EAAE,EAAEM,MAFA;UAGJ,OAAO,EAAE,MAAIlB,QAAQ,CAACkB,MAAD,CAHjB,CAIJ;UAJI;UAAA,UAMCA;QAND,GACCA,MADD;UAAA;UAAA;UAAA;QAAA,QADJ;MAUC,CAbA,CAJL,eAwBI;QAAA,uBACI;UAAQ,SAAS,EAAEjB,WAAW,KAAGG,UAAU,CAACe,MAAzB,GAAgCxB,CAAC,CAACoB,OAAlC,GAA0CpB,CAAC,CAACqB,SAA/D;UAA0E,OAAO,EAAEb,aAAa,IAAIQ,qBAAqB,CAACD,kBAAkB,GAAC,CAApB,CAAzH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAxBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH;;GA5DuBb,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}