{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Desktop\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllRecipes, minPageNumber, resetPage, resetMaxMin, maxPageNumber, postInitRecipes, filterRecipsByDiet, savePage, deleteFilter, orderByName, searchByName, orderByHealthScore } from '../../actions';\nimport Card from '../Card/Cards.js';\nimport NavBar from '../NavBar/NavBar.js';\nimport Paginado from '../Paginado/Paginado.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport FilterBar from '../FilterBar/FilterBar.js';\nimport s from './Home.module.css'; // Ruta principal: debe contener\n// [ ] Input de búsqueda para encontrar recetas por nombre\n// [ ] Área donde se verá el listado de recetas. Deberá mostrar su:\n// Imagen\n// Nombre\n// Tipo de dieta (vegetariano, vegano, apto celíaco, etc)\n// [ ] Botones/Opciones para filtrar por por tipo de dieta\n// [ ] Botones/Opciones para ordenar tanto ascendentemente como descendentemente las recetas por orden alfabético y por health score (nivel de comida saludable).\n// [ ] Paginado para ir buscando y mostrando las siguientes recetas, 9 recetas por pagina, mostrando las primeros 9 en la primer pagina.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const gif = 'https://media2.giphy.com/media/HeMju6ptLhZ7XCA4vH/giphy.gif?cid=790b7611adf768434dfa5bd572ec4332d478fca69a7bf862&rid=giphy.gif&ct=s';\n  let allRecipes = useSelector(state => state === null || state === void 0 ? void 0 : state.recipes);\n  const allRecipes2 = useSelector(state => state === null || state === void 0 ? void 0 : state.allRecipes);\n  const titleSearch = useSelector(state => state === null || state === void 0 ? void 0 : state.recipesSearch); // let [order, setOrder] = useState('')\n\n  const [loadingg, setLoadingg] = useState(false); //para intentar resetear el filtro cuando se actualiza\n  // const filter = useSelector(state=>state?.deleteFilter)\n\n  const actualPage = useSelector(state => state === null || state === void 0 ? void 0 : state.recordedPage); // let [currentPage, setCurrentPage] = useState(1)\n\n  useEffect(() => {\n    dispatch(getAllRecipes());\n    setTimeout(() => {\n      setLoadingg(true);\n    }, 1000); // console.log('PAGINA ACTUAL',actualPage)\n    // actualPage && setCurrentPage(actualPage)\n\n    return () => {// dispatch(deleteFilter())//para resetear el filtro cuando actualiza\n    };\n  }, [dispatch]); //para reseterar el filtro cuando actualiza\n  // const handleRecharge = (e) => {\n  //     e.preventDefault()\n  //     dispatch(getAllRecipes()) \n  // }\n\n  const [recipesPerPage, setRecipesPerPage] = useState(9);\n  console.log('PAGINA ACTUAL', actualPage);\n  console.log('ALLRECIPES1', allRecipes);\n  console.log('ALLRECIPES2', allRecipes2);\n  const indexOfLastRecipe = actualPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = (allRecipes === null || allRecipes === void 0 ? void 0 : allRecipes.length) > 0 ? allRecipes === null || allRecipes === void 0 ? void 0 : allRecipes.slice(indexOfFirstRecipe, indexOfLastRecipe) : allRecipes2.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  const [title, setTitile] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0); // const paginado = (pageNumber) =>{\n  //     setCurrentPage(pageNumber)\n  //     // setmaxPageNumberLimit(maxPageNumberLimit+pageNumber-actualPage)\n  //     // setminPageNumberLimit(minPageNumberLimit+pageNumber-actualPage)\n  //     dispatch(savePage(pageNumber))\n  // }\n  // const handleFilterDiet=(e)=>{\n  //     e.preventDefault()\n  //     dispatch(deleteFilter())\n  //     dispatch(filterRecipsByDiet(e.target.value))\n  //     // setmaxPageNumberLimit(4)\n  //     // setminPageNumberLimit(0)\n  //     resetMaxMin()\n  //     // setCurrentPage(1)\n  //     resetPage()\n  // }\n  // function handleOrderByName(e){\n  //     e.preventDefault()\n  //     dispatch(orderByName(e.target.value))\n  //     // setCurrentPage(1)\n  //     setOrder(`Ordenado: ${e.target.value}`)\n  //     // setmaxPageNumberLimit(4)\n  //     // setminPageNumberLimit(0)\n  //     resetMaxMin()\n  //     resetPage()\n  // }\n  // function handleOrderByHealthScore(e){\n  //     e.preventDefault()\n  //     dispatch(orderByHealthScore(e.target.value))\n  //     // setCurrentPage(1)\n  //     setOrder(`Ordenado: ${e.target.value}`)\n  //     // setmaxPageNumberLimit(4)\n  //     // setminPageNumberLimit(0)\n  //     resetMaxMin()\n  //     resetPage()\n  // }\n  // function handleInput(e){\n  //     e.preventDefault()\n  //     setTitile(e.target.value)\n  //     dispatch(searchByName(title))\n  // }\n  // function handlePrevBut() {\n  //     setCurrentPage(currentPage-1)\n  // }\n  // function handleNextBut() {\n  //     setCurrentPage(currentPage+1)\n  // }\n  // function handleInput(e){\n  //     e.preventDefault()\n  //     setTitile(e.target.value)\n  //     dispatch(searchByName(title))\n  // }\n  // function handleSearch(e){\n  //     e.preventDefault()\n  //     dispatch(searchByName(title))\n  //     setTitile('')\n  // }\n  // function handleSearch(e){\n  //     e.preventDefault()\n  //     dispatch(searchByName(title))\n  // }\n  // const pageNumber = []\n  // for(let i=1; i<=Math.ceil( allRecipes / recipesPerPage ); i++){\n  //     pageNumber.push(i)\n  // }\n  // function handlePrevBut() {\n  //     // setCurrentPage(currentPage-1)\n  //     // setminPageNumberLimit(minPageNumberLimit-1)\n  //     // setmaxPageNumberLimit(maxPageNumberLimit-1)\n  //     console.log ('CURRENT PAGE1', currentPage-1)\n  //     dispatch(savePage(currentPage-1))\n  //     minPageNumber(-1)\n  //     maxPageNumber(-1)\n  // }\n  // function handleNextBut() {\n  //     // setCurrentPage(currentPage+1)\n  //     // setmaxPageNumberLimit(maxPageNumberLimit+1)\n  //     // setminPageNumberLimit(minPageNumberLimit+1)\n  //     // console.log ('CURRENT PAGE2', currentPage+1)\n  //     dispatch(savePage(currentPage+1))\n  //     console.log('MAXPAGENUMBER1',maxPageNumberLimit+1)\n  //     minPageNumber(1)\n  //     maxPageNumber(1)\n  // }\n  // function handleInput(e){\n  //     e.preventDefault()\n  //     setCurrentPage(1)   \n  //     setTitile(e.target.value)\n  //     dispatch(searchByName(title))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchBar // handleInput={handleInput}\n      // title={title}\n      // setCurrentPage={setCurrentPage}\n      // setminPageNumberLimit={setminPageNumberLimit}\n      // setmaxPageNumberLimit={setmaxPageNumberLimit}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FilterBar // handleFilterDiet={handleFilterDiet}\n      // handleOrderByHealthScore={handleOrderByHealthScore}\n      // handleOrderByName={handleOrderByName}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), !loadingg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.loadingg,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [allRecipes && /*#__PURE__*/_jsxDEV(Paginado, {\n        recipesPerPage: recipesPerPage,\n        allRecipes: allRecipes.length > 0 ? allRecipes.length : allRecipes2.length // currentPage = {currentPage}\n        // setCurrentPage = {setCurrentPage}\n        // paginado = {paginado}\n        // pageNumber={pageNumber}\n        // maxPageNumberLimit={maxPageNumberLimit}\n        // minPageNumberLimit={minPageNumberLimit}\n        // handlePrevBut = {handlePrevBut}\n        // handleNextBut = {handleNextBut}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.containerCard,\n        children: // loading?(\n        //     <div>\n        //         <span>cargando</span>\n        //         {\n        //             setTimeout(() => {\n        //                 setLoading(false);\n        //               }, 3000)\n        //         }\n        //     </div>\n        // )\n        // :\n        currentRecipes && currentRecipes.map(el => {\n          // console.log('SOY RECIPESs',currentRecipes)\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${el.id}`,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: el.title,\n                image: el.image,\n                diets: el.diets,\n                healthScore: el.healthScore\n              }, el.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)\n            }, el.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this);\n        }) // :\n        // titleSearch && titleSearch.map(el=>{\n        //     console.log('BUSQUEDA', titleSearch)\n        //     return(\n        //         <div>\n        //             <Link key={el.id} to={`/detail/${el.id}`}>\n        //                 <Card title={el.title} image={el.image} diets={el.diets} key={el.id}/>\n        //             </Link>\n        //         </div>\n        //     )\n        // })\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"IMExAktKc9mKLhUgZMG+EfoiMEQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Link","useDispatch","useSelector","getAllRecipes","minPageNumber","resetPage","resetMaxMin","maxPageNumber","postInitRecipes","filterRecipsByDiet","savePage","deleteFilter","orderByName","searchByName","orderByHealthScore","Card","NavBar","Paginado","SearchBar","FilterBar","s","Home","dispatch","gif","allRecipes","state","recipes","allRecipes2","titleSearch","recipesSearch","loadingg","setLoadingg","actualPage","recordedPage","setTimeout","recipesPerPage","setRecipesPerPage","console","log","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","length","slice","title","setTitile","loading","setLoading","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","containerCard","map","el","id","image","diets","healthScore"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/components/Home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllRecipes,minPageNumber, resetPage, resetMaxMin, maxPageNumber, postInitRecipes, filterRecipsByDiet, savePage, deleteFilter, orderByName,searchByName, orderByHealthScore } from '../../actions';\r\nimport Card from '../Card/Cards.js';\r\nimport NavBar from '../NavBar/NavBar.js';\r\nimport Paginado from '../Paginado/Paginado.js';\r\nimport SearchBar from '../SearchBar/SearchBar.js';\r\nimport FilterBar from '../FilterBar/FilterBar.js';\r\nimport s from './Home.module.css'\r\n\r\n// Ruta principal: debe contener\r\n\r\n// [ ] Input de búsqueda para encontrar recetas por nombre\r\n// [ ] Área donde se verá el listado de recetas. Deberá mostrar su:\r\n// Imagen\r\n// Nombre\r\n// Tipo de dieta (vegetariano, vegano, apto celíaco, etc)\r\n// [ ] Botones/Opciones para filtrar por por tipo de dieta\r\n// [ ] Botones/Opciones para ordenar tanto ascendentemente como descendentemente las recetas por orden alfabético y por health score (nivel de comida saludable).\r\n// [ ] Paginado para ir buscando y mostrando las siguientes recetas, 9 recetas por pagina, mostrando las primeros 9 en la primer pagina.\r\n\r\nexport default function Home(){\r\n\r\n    const dispatch = useDispatch()\r\n    const gif = 'https://media2.giphy.com/media/HeMju6ptLhZ7XCA4vH/giphy.gif?cid=790b7611adf768434dfa5bd572ec4332d478fca69a7bf862&rid=giphy.gif&ct=s'\r\n    let allRecipes = useSelector (state=>state?.recipes)\r\n    const allRecipes2 = useSelector (state=>state?.allRecipes)\r\n    const titleSearch = useSelector (state=>state?.recipesSearch)\r\n    // let [order, setOrder] = useState('')\r\n    const [loadingg, setLoadingg] = useState(false)\r\n    //para intentar resetear el filtro cuando se actualiza\r\n    // const filter = useSelector(state=>state?.deleteFilter)\r\n    const actualPage = useSelector(state=>state?.recordedPage)\r\n    // let [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getAllRecipes())\r\n        setTimeout( ()=>{\r\n            setLoadingg(true) \r\n        }, 1000)\r\n        // console.log('PAGINA ACTUAL',actualPage)\r\n        // actualPage && setCurrentPage(actualPage)\r\n        return()=>{\r\n            \r\n            \r\n            // dispatch(deleteFilter())//para resetear el filtro cuando actualiza\r\n           \r\n        }\r\n    },[dispatch]) //para reseterar el filtro cuando actualiza\r\n\r\n    // const handleRecharge = (e) => {\r\n    //     e.preventDefault()\r\n    //     dispatch(getAllRecipes()) \r\n    // }\r\n\r\n    \r\n    const [recipesPerPage, setRecipesPerPage] = useState(9)\r\n    console.log('PAGINA ACTUAL', actualPage)\r\n    console.log('ALLRECIPES1', allRecipes)\r\n    console.log('ALLRECIPES2', allRecipes2)\r\n    const indexOfLastRecipe = actualPage * recipesPerPage\r\n    const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage\r\n    const currentRecipes = allRecipes?.length>0?allRecipes?.slice(indexOfFirstRecipe, indexOfLastRecipe):allRecipes2.slice(indexOfFirstRecipe, indexOfLastRecipe)\r\n    const [title, setTitile] = useState('')\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(4);\r\n    const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\r\n\r\n    // const paginado = (pageNumber) =>{\r\n    //     setCurrentPage(pageNumber)\r\n    //     // setmaxPageNumberLimit(maxPageNumberLimit+pageNumber-actualPage)\r\n    //     // setminPageNumberLimit(minPageNumberLimit+pageNumber-actualPage)\r\n    //     dispatch(savePage(pageNumber))\r\n    // }\r\n\r\n    // const handleFilterDiet=(e)=>{\r\n    //     e.preventDefault()\r\n    //     dispatch(deleteFilter())\r\n    //     dispatch(filterRecipsByDiet(e.target.value))\r\n    //     // setmaxPageNumberLimit(4)\r\n    //     // setminPageNumberLimit(0)\r\n    //     resetMaxMin()\r\n    //     // setCurrentPage(1)\r\n    //     resetPage()\r\n    // }\r\n\r\n    // function handleOrderByName(e){\r\n    //     e.preventDefault()\r\n    //     dispatch(orderByName(e.target.value))\r\n    //     // setCurrentPage(1)\r\n    //     setOrder(`Ordenado: ${e.target.value}`)\r\n    //     // setmaxPageNumberLimit(4)\r\n    //     // setminPageNumberLimit(0)\r\n    //     resetMaxMin()\r\n    //     resetPage()\r\n    // }\r\n\r\n    // function handleOrderByHealthScore(e){\r\n    //     e.preventDefault()\r\n    //     dispatch(orderByHealthScore(e.target.value))\r\n    //     // setCurrentPage(1)\r\n    //     setOrder(`Ordenado: ${e.target.value}`)\r\n    //     // setmaxPageNumberLimit(4)\r\n    //     // setminPageNumberLimit(0)\r\n    //     resetMaxMin()\r\n    //     resetPage()\r\n\r\n    // }\r\n\r\n    // function handleInput(e){\r\n    //     e.preventDefault()\r\n    //     setTitile(e.target.value)\r\n    //     dispatch(searchByName(title))\r\n    // }\r\n\r\n    // function handlePrevBut() {\r\n    //     setCurrentPage(currentPage-1)\r\n\r\n    // }\r\n\r\n    // function handleNextBut() {\r\n    //     setCurrentPage(currentPage+1)\r\n        \r\n\r\n    // }\r\n\r\n    // function handleInput(e){\r\n    //     e.preventDefault()\r\n    //     setTitile(e.target.value)\r\n    //     dispatch(searchByName(title))\r\n    // }\r\n\r\n    // function handleSearch(e){\r\n    //     e.preventDefault()\r\n    //     dispatch(searchByName(title))\r\n\r\n    //     setTitile('')\r\n    // }\r\n\r\n    // function handleSearch(e){\r\n    //     e.preventDefault()\r\n    //     dispatch(searchByName(title))\r\n        \r\n    // }\r\n\r\n    // const pageNumber = []\r\n    // for(let i=1; i<=Math.ceil( allRecipes / recipesPerPage ); i++){\r\n    //     pageNumber.push(i)\r\n    // }\r\n\r\n    \r\n\r\n    // function handlePrevBut() {\r\n    //     // setCurrentPage(currentPage-1)\r\n    //     // setminPageNumberLimit(minPageNumberLimit-1)\r\n    //     // setmaxPageNumberLimit(maxPageNumberLimit-1)\r\n    //     console.log ('CURRENT PAGE1', currentPage-1)\r\n    //     dispatch(savePage(currentPage-1))\r\n    //     minPageNumber(-1)\r\n    //     maxPageNumber(-1)\r\n    // }\r\n\r\n    // function handleNextBut() {\r\n    //     // setCurrentPage(currentPage+1)\r\n    //     // setmaxPageNumberLimit(maxPageNumberLimit+1)\r\n    //     // setminPageNumberLimit(minPageNumberLimit+1)\r\n    //     // console.log ('CURRENT PAGE2', currentPage+1)\r\n    //     dispatch(savePage(currentPage+1))\r\n    //     console.log('MAXPAGENUMBER1',maxPageNumberLimit+1)\r\n    //     minPageNumber(1)\r\n    //     maxPageNumber(1)\r\n\r\n    // }\r\n\r\n    \r\n    // function handleInput(e){\r\n    //     e.preventDefault()\r\n    //     setCurrentPage(1)   \r\n    //     setTitile(e.target.value)\r\n    //     dispatch(searchByName(title))\r\n        \r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavBar/>\r\n            </div>\r\n            {/* <h1>Home</h1> */}\r\n            {/* <div>\r\n                <label>Receta:</label>\r\n                <input type=\"text\" id=\"title\" />\r\n                <Link to = '/detail'>\r\n                <button>Buscar</button>\r\n                </Link>\r\n            </div> */}\r\n            {/* <Link to = '/detail'>\r\n                Ingresar\r\n            </Link> */}\r\n            {/* <button  onClick={(e)=> handleRecharge()}>Recargar</button> */}\r\n            {/* <div>\r\n                <label htmlFor='title'>Busqueda</label>\r\n                <input type='text' id='title' autoComplete='off' value={title} placeholder= \"Search Recipe\" onChange={e=>handleInput(e)}></input>\r\n                <button onClick={(e)=>handleSearch(e)}>Buscar</button>\r\n            </div> */}\r\n            <div>\r\n                <SearchBar\r\n                // handleInput={handleInput}\r\n                // title={title}\r\n                // setCurrentPage={setCurrentPage}\r\n                // setminPageNumberLimit={setminPageNumberLimit}\r\n                // setmaxPageNumberLimit={setmaxPageNumberLimit}\r\n\r\n                />\r\n            </div>\r\n            <div>\r\n                <FilterBar\r\n                // handleFilterDiet={handleFilterDiet}\r\n                // handleOrderByHealthScore={handleOrderByHealthScore}\r\n                // handleOrderByName={handleOrderByName}\r\n                />\r\n            {/* <select onChange={e=>handleOrderByName(e)}>\r\n                    <option value='asc'>(a-z) Ascendent</option>\r\n                    <option value='desc'>(z-a) Descendent</option>\r\n                </select>\r\n                <select onChange={e=>handleOrderByHealthScore(e)}>\r\n                    <option value='low'>Lower</option>\r\n                    <option value='hi'>Higher</option>\r\n                </select>\r\n                <select onChange={e=>handleFilterDiet(e)}>\r\n                    <option value='All'>Todos</option>\r\n                    <option value='gluten free'>gluten free</option>\r\n                    <option value='dairy free'>dairy free</option>\r\n                    <option value='lacto ovo vegetarian'>lacto ovo vegetarian</option>\r\n                    <option value='vegan'>vegan</option>\r\n                    <option value='paleolithic'>paleolithic</option>\r\n                    <option value='primal'>primal</option>\r\n                    <option value='whole 30'>whole 30</option>\r\n                    <option value='pescatarian'>pescatarian</option>\r\n                    <option value='ketogenic'>ketogenic</option>\r\n                    <option value='fodmap friendly'>fodmap friendly</option>\r\n                </select> */}\r\n                {/* {console.log(\"ALL RECIPES\",allRecipes)} */}\r\n            </div>\r\n            {\r\n                !loadingg?(\r\n                    <div className={s.loadingg}>\r\n                        <img  src={gif}/>\r\n                    </div>\r\n                    \r\n                )\r\n                :\r\n                <div>\r\n            {allRecipes &&\r\n            <Paginado\r\n            recipesPerPage = {recipesPerPage}\r\n            allRecipes = {allRecipes.length>0?allRecipes.length:allRecipes2.length}\r\n            // currentPage = {currentPage}\r\n            // setCurrentPage = {setCurrentPage}\r\n            \r\n            // paginado = {paginado}\r\n            // pageNumber={pageNumber}\r\n            // maxPageNumberLimit={maxPageNumberLimit}\r\n            // minPageNumberLimit={minPageNumberLimit}\r\n            // handlePrevBut = {handlePrevBut}\r\n            // handleNextBut = {handleNextBut}\r\n            />\r\n            \r\n            }\r\n            \r\n            <div className={s.containerCard}>\r\n            \r\n            {   \r\n                // loading?(\r\n                //     <div>\r\n                //         <span>cargando</span>\r\n                //         {\r\n                //             setTimeout(() => {\r\n                //                 setLoading(false);\r\n                //               }, 3000)\r\n                //         }\r\n                //     </div>\r\n                // )\r\n                // :\r\n                currentRecipes && currentRecipes.map(el=>{\r\n                    // console.log('SOY RECIPESs',currentRecipes)\r\n                    return(\r\n                        <div>\r\n                            {/* {console.log('ELEMENTO', el)} */}\r\n                            <Link key={el.id} to={`/detail/${el.id}`}>\r\n                                <Card title={el.title} image={el.image} diets={el.diets} healthScore={el.healthScore} key={el.id}/>\r\n                            </Link>\r\n                            \r\n                        </div>\r\n\r\n                    \r\n                    )\r\n                })\r\n                // :\r\n                \r\n                // titleSearch && titleSearch.map(el=>{\r\n                //     console.log('BUSQUEDA', titleSearch)\r\n                //     return(\r\n                //         <div>\r\n                            \r\n                //             <Link key={el.id} to={`/detail/${el.id}`}>\r\n                //                 <Card title={el.title} image={el.image} diets={el.diets} key={el.id}/>\r\n                //             </Link>\r\n                            \r\n                //         </div>\r\n\r\n                    \r\n                //     )\r\n                // })\r\n            }\r\n            </div>\r\n            \r\n            </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}