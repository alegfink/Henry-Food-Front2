{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Desktop\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\Paginado\\\\Paginado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport s from './Paginado.module.css';\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { maxPageNumber, minPageNumber, savePage } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginado(_ref) {\n  _s();\n\n  let {\n    recipesPerPage,\n    allRecipes\n  } = _ref;\n  const pageNumber = [];\n  const actualP = useSelector(state => state === null || state === void 0 ? void 0 : state.recordedPage);\n  console.log('PAGINA ACTUAL', actualP);\n  console.log('PAGE NUMBER', pageNumber);\n  const dispatch = useDispatch();\n  const maxPage = useSelector(state => state === null || state === void 0 ? void 0 : state.maxPageNumber);\n  const minPage = useSelector(state => state === null || state === void 0 ? void 0 : state.minPageNumber);\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumber.push(i);\n  } // const pagge = pageNumber.slice(actualP-1)\n  // useEffect(()=>{\n  //     console.log('MAXPAGENUMBER1',maxPageNumberLimit+1);\n  // },[])\n\n\n  const pageNumberLimit = 3; //total de paginas que quiero renderizar\n  // const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(4);\n  // const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\n  // const renderPageNumbers= pageNumber.map((number)=>{\n  //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\n  //         return(\n  //             <li \n  //             key={number} \n  //             id={number} \n  //             onClick={paginado}\n  //             className={currentPage === number? \"active\" : null} >\n  //                 {number}\n  //             </li>\n  //         )\n  //     }else{\n  //         return null;\n  //     }\n  // }) \n  // const paginateMas = () => setCurrentPage(currentPage + 1)\n  // const paginateMenos = () => setCurrentPage(currentPage - 1)\n  // function handlePrevBut() {\n  //     setCurrentPage(currentPage-1)\n  //     setminPageNumberLimit(minPageNumberLimit-1)\n  //     setmaxPageNumberLimit(maxPageNumberLimit-1)\n  // }\n  // function handleNextBut() {\n  //     setCurrentPage(currentPage+1)\n  //     setmaxPageNumberLimit(maxPageNumberLimit+1)\n  //     setminPageNumberLimit(minPageNumberLimit+1)\n\n  const paginado = number => {\n    // setmaxPageNumberLimit(maxPageNumberLimit+pageNumber-actualPage)\n    // setminPageNumberLimit(minPageNumberLimit+pageNumber-actualPage)\n    dispatch(savePage(number));\n  }; // for (let i = actualP; i < pageNumber.length; i++) {\n  //     if(i < maxPageNumberLimit+1 && i > minPageNumberLimit){\n  //     return (\n  //         <li \n  //     key={i} \n  //     id={i} \n  //     onClick={()=>paginado(i)}\n  //     className={currentPage === i? s.active : s.pages}\n  //      >\n  //         {i}\n  //     </li>\n  //     )}\n  // }\n\n\n  function handlePrevBut() {\n    // setCurrentPage(currentPage-1)\n    // setminPageNumberLimit(minPageNumberLimit-1)\n    // setmaxPageNumberLimit(maxPageNumberLimit-1)\n    // console.log ('CURRENT PAGE1', currentPage-1)\n    dispatch(savePage(actualP - 1));\n    minPageNumber(-1);\n    maxPageNumber(-1);\n  }\n\n  function handleNextBut() {\n    // setCurrentPage(currentPage+1)\n    // setmaxPageNumberLimit(maxPageNumberLimit+1)\n    // setminPageNumberLimit(minPageNumberLimit+1)\n    // console.log ('CURRENT PAGE2', currentPage+1)\n    dispatch(savePage(actualP + 1)); // console.log('MAXPAGENUMBER1',maxPageNumberLimit+1)\n\n    minPageNumber(1);\n    maxPageNumber(1);\n  } // const pagg = {\n  // }\n  // console.log('SLICE', pageNumber.slice(actualP))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.pageNumbers,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: actualP > 1 ? s.prevNext : s.noPrevBut,\n        onClick: handlePrevBut,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), pageNumber.map(number => {\n        //.slice(actualP-1)\n        if (number < maxPage + 1 && number > minPage) {\n          console.log('NUMERO', number);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            id: number,\n            onClick: () => paginado(number),\n            className: actualP === number ? s.active : s.pages,\n            children: number\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: actualP !== pageNumber.length ? s.prevNext : s.noPrevBut,\n        onClick: handleNextBut,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paginado, \"WEM+n1hlDyOUoNwdXNWGYRJrb8Q=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = Paginado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","useEffect","s","useState","useSelector","useDispatch","maxPageNumber","minPageNumber","savePage","Paginado","recipesPerPage","allRecipes","pageNumber","actualP","state","recordedPage","console","log","dispatch","maxPage","minPage","i","Math","ceil","push","pageNumberLimit","paginado","number","handlePrevBut","handleNextBut","pageNumbers","prevNext","noPrevBut","map","active","pages","length"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/components/Paginado/Paginado.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport s from './Paginado.module.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { maxPageNumber, minPageNumber, savePage } from \"../../actions\";\r\n\r\n\r\n\r\nexport default function Paginado ({recipesPerPage, allRecipes}){\r\n    const pageNumber = []\r\n    const actualP = useSelector(state=>state?.recordedPage)\r\n    console.log('PAGINA ACTUAL',actualP)\r\n    console.log('PAGE NUMBER', pageNumber)\r\n    const dispatch = useDispatch()\r\n    const maxPage = useSelector(state=>state?.maxPageNumber)\r\n    const minPage = useSelector(state=>state?.minPageNumber)\r\n    \r\n    for(let i=1; i<=Math.ceil( allRecipes / recipesPerPage ); i++){\r\n        pageNumber.push(i)\r\n    }\r\n    // const pagge = pageNumber.slice(actualP-1)\r\n    // useEffect(()=>{\r\n    //     console.log('MAXPAGENUMBER1',maxPageNumberLimit+1);\r\n    // },[])\r\n    \r\n    const pageNumberLimit= 3; //total de paginas que quiero renderizar\r\n    // const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(4);\r\n    // const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\r\n    // const renderPageNumbers= pageNumber.map((number)=>{\r\n        \r\n    //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\r\n    //         return(\r\n    //             <li \r\n    //             key={number} \r\n    //             id={number} \r\n    //             onClick={paginado}\r\n    //             className={currentPage === number? \"active\" : null} >\r\n    //                 {number}\r\n    //             </li>\r\n    //         )\r\n    //     }else{\r\n    //         return null;\r\n    //     }\r\n    // }) \r\n    // const paginateMas = () => setCurrentPage(currentPage + 1)\r\n    // const paginateMenos = () => setCurrentPage(currentPage - 1)\r\n    // function handlePrevBut() {\r\n    //     setCurrentPage(currentPage-1)\r\n    //     setminPageNumberLimit(minPageNumberLimit-1)\r\n    //     setmaxPageNumberLimit(maxPageNumberLimit-1)\r\n\r\n    // }\r\n\r\n    // function handleNextBut() {\r\n    //     setCurrentPage(currentPage+1)\r\n    //     setmaxPageNumberLimit(maxPageNumberLimit+1)\r\n    //     setminPageNumberLimit(minPageNumberLimit+1)\r\n\r\n    const paginado = (number) =>{\r\n        \r\n        // setmaxPageNumberLimit(maxPageNumberLimit+pageNumber-actualPage)\r\n        // setminPageNumberLimit(minPageNumberLimit+pageNumber-actualPage)\r\n        dispatch(savePage(number))\r\n    }\r\n    // for (let i = actualP; i < pageNumber.length; i++) {\r\n                //     if(i < maxPageNumberLimit+1 && i > minPageNumberLimit){\r\n                //     return (\r\n                //         <li \r\n                //     key={i} \r\n                //     id={i} \r\n                //     onClick={()=>paginado(i)}\r\n                //     className={currentPage === i? s.active : s.pages}\r\n                //      >\r\n                //         {i}\r\n                //     </li>\r\n                //     )}\r\n                // }\r\n    \r\n    function handlePrevBut() {\r\n                    // setCurrentPage(currentPage-1)\r\n                    // setminPageNumberLimit(minPageNumberLimit-1)\r\n                    // setmaxPageNumberLimit(maxPageNumberLimit-1)\r\n        // console.log ('CURRENT PAGE1', currentPage-1)\r\n        dispatch(savePage(actualP-1))\r\n        minPageNumber(-1)\r\n        maxPageNumber(-1)\r\n        }\r\n            \r\n    function handleNextBut() {\r\n            // setCurrentPage(currentPage+1)\r\n                    // setmaxPageNumberLimit(maxPageNumberLimit+1)\r\n                    // setminPageNumberLimit(minPageNumberLimit+1)\r\n                    // console.log ('CURRENT PAGE2', currentPage+1)\r\n        dispatch(savePage(actualP+1))\r\n        // console.log('MAXPAGENUMBER1',maxPageNumberLimit+1)\r\n        minPageNumber(1)\r\n        maxPageNumber(1)\r\n            \r\n        }\r\n       \r\n    // const pagg = {\r\n        \r\n    // }\r\n    // console.log('SLICE', pageNumber.slice(actualP))\r\n\r\n    // }\r\n    \r\n    return (\r\n        <nav >\r\n            \r\n            <ul className={s.pageNumbers}>\r\n                <li className={actualP>1?s.prevNext:s.noPrevBut} onClick={handlePrevBut}>\r\n                    {/* <button className={currentPage>1?s.prevBut:s.noPrevBut} >Prev</button> */}\r\n                    Prev\r\n                </li>\r\n                {/* {console.log('MAXNUMBER', maxPageNumberLimit)} */}\r\n                \r\n                {\r\n                    pageNumber.map((number)=>{  //.slice(actualP-1)\r\n                        if(number < maxPage+1 && number > minPage){\r\n                            console.log('NUMERO', number)\r\n                            return(\r\n                                <li \r\n                                key={number} \r\n                                id={number} \r\n                                onClick={()=>paginado(number)}\r\n                                className={actualP === number? s.active : s.pages}\r\n                                >\r\n                                {number}\r\n                                </li>\r\n                                )}\r\n                        }) \r\n                            \r\n                }\r\n            \r\n                       \r\n                {/* {pageNumber && pageNumber.map(num=>(\r\n                    <li key={num} id={num}>\r\n                       <a onClick={()=>paginado(num)}>{num}</a> \r\n                    </li>\r\n                ))} */}\r\n                <li className={actualP!==pageNumber.length?s.prevNext:s.noPrevBut} onClick={handleNextBut}>\r\n                    {/* <button className={currentPage!==pageNumber.length?s.prevBut:s.noPrevBut} >Next</button> */}\r\n                    Next\r\n                </li>\r\n            \r\n            \r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}