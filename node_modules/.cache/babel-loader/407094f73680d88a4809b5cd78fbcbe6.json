{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\Desktop\\\\PI-Food-main\\\\client\\\\src\\\\components\\\\Paginado\\\\Paginado.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport s from './Paginado.module.css';\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Paginado(_ref) {\n  _s();\n\n  let {\n    recipesPerPage,\n    allRecipes,\n    paginado,\n    currentPage,\n    setCurrentPage,\n    minPageNumberLimit,\n    maxPageNumberLimit,\n    handleNextBut,\n    handlePrevBut\n  } = _ref;\n  const pageNumber = [];\n  const actualP = useSelector(state => state === null || state === void 0 ? void 0 : state.recordedPage);\n  console.log('PAGINA ACTUAL', actualP);\n\n  for (let i = 1; i <= Math.ceil(allRecipes / recipesPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  useEffect(() => {\n    console.log('MAXPAGENUMBER', maxPageNumberLimit + 1);\n  }, []);\n  const pageNumberLimit = 3; //total de paginas que quiero renderizar\n  // const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(4);\n  // const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\n  // const renderPageNumbers= pageNumber.map((number)=>{\n  //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\n  //         return(\n  //             <li \n  //             key={number} \n  //             id={number} \n  //             onClick={paginado}\n  //             className={currentPage === number? \"active\" : null} >\n  //                 {number}\n  //             </li>\n  //         )\n  //     }else{\n  //         return null;\n  //     }\n  // }) \n  // const paginateMas = () => setCurrentPage(currentPage + 1)\n  // const paginateMenos = () => setCurrentPage(currentPage - 1)\n  // function handlePrevBut() {\n  //     setCurrentPage(currentPage-1)\n  //     setminPageNumberLimit(minPageNumberLimit-1)\n  //     setmaxPageNumberLimit(maxPageNumberLimit-1)\n  // }\n  // function handleNextBut() {\n  //     setCurrentPage(currentPage+1)\n  //     setmaxPageNumberLimit(maxPageNumberLimit+1)\n  //     setminPageNumberLimit(minPageNumberLimit+1)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.pageNumbers,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage > 1 ? s.prevNext : s.noPrevBut,\n        onClick: handlePrevBut,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), pageNumber.map(number => {\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) return /*#__PURE__*/_jsxDEV(\"li\", {\n          id: number,\n          onClick: () => paginado(number),\n          className: currentPage === number ? s.active : s.pages,\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage !== pageNumber.length ? s.prevNext : s.noPrevBut,\n        onClick: handleNextBut,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paginado, \"xSdhf/6JUJYMzTsINdYTZNvEvRA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Paginado;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginado\");","map":{"version":3,"names":["React","useEffect","s","useState","useSelector","Paginado","recipesPerPage","allRecipes","paginado","currentPage","setCurrentPage","minPageNumberLimit","maxPageNumberLimit","handleNextBut","handlePrevBut","pageNumber","actualP","state","recordedPage","console","log","i","Math","ceil","push","pageNumberLimit","pageNumbers","prevNext","noPrevBut","map","number","active","pages","length"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/components/Paginado/Paginado.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport s from './Paginado.module.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nexport default function Paginado ({recipesPerPage, allRecipes, paginado, currentPage, setCurrentPage,minPageNumberLimit,maxPageNumberLimit,handleNextBut,handlePrevBut}){\r\n    const pageNumber = []\r\n    const actualP = useSelector(state=>state?.recordedPage)\r\n    console.log('PAGINA ACTUAL',actualP)\r\n    for(let i=1; i<=Math.ceil( allRecipes / recipesPerPage ); i++){\r\n        pageNumber.push(i)\r\n    }\r\n    useEffect(()=>{\r\n        console.log('MAXPAGENUMBER',maxPageNumberLimit+1);\r\n    },[])\r\n    \r\n    const pageNumberLimit= 3; //total de paginas que quiero renderizar\r\n    // const [maxPageNumberLimit, setmaxPageNumberLimit]= useState(4);\r\n    // const [minPageNumberLimit, setminPageNumberLimit]= useState(0);\r\n    // const renderPageNumbers= pageNumber.map((number)=>{\r\n        \r\n    //     if(number < maxPageNumberLimit+1 && number > minPageNumberLimit){\r\n    //         return(\r\n    //             <li \r\n    //             key={number} \r\n    //             id={number} \r\n    //             onClick={paginado}\r\n    //             className={currentPage === number? \"active\" : null} >\r\n    //                 {number}\r\n    //             </li>\r\n    //         )\r\n    //     }else{\r\n    //         return null;\r\n    //     }\r\n    // }) \r\n    // const paginateMas = () => setCurrentPage(currentPage + 1)\r\n    // const paginateMenos = () => setCurrentPage(currentPage - 1)\r\n    // function handlePrevBut() {\r\n    //     setCurrentPage(currentPage-1)\r\n    //     setminPageNumberLimit(minPageNumberLimit-1)\r\n    //     setmaxPageNumberLimit(maxPageNumberLimit-1)\r\n\r\n    // }\r\n\r\n    // function handleNextBut() {\r\n    //     setCurrentPage(currentPage+1)\r\n    //     setmaxPageNumberLimit(maxPageNumberLimit+1)\r\n    //     setminPageNumberLimit(minPageNumberLimit+1)\r\n        \r\n\r\n    // }\r\n    \r\n    return (\r\n        <nav >\r\n            \r\n            <ul className={s.pageNumbers}>\r\n                <li className={currentPage>1?s.prevNext:s.noPrevBut} onClick={handlePrevBut}>\r\n                    {/* <button className={currentPage>1?s.prevBut:s.noPrevBut} >Prev</button> */}\r\n                    Prev\r\n                </li>\r\n                {/* {console.log('MAXNUMBER', maxPageNumberLimit)} */}\r\n                {pageNumber.map((number)=>{\r\n                    \r\n                if(number < maxPageNumberLimit+1 && number > minPageNumberLimit)\r\n                return (\r\n                    <li \r\n                key={number} \r\n                id={number} \r\n                onClick={()=>paginado(number)}\r\n                className={currentPage === number? s.active : s.pages}\r\n                 >\r\n                    {number}\r\n                </li>\r\n                )\r\n                })\r\n                }\r\n                {/* {pageNumber && pageNumber.map(num=>(\r\n                    <li key={num} id={num}>\r\n                       <a onClick={()=>paginado(num)}>{num}</a> \r\n                    </li>\r\n                ))} */}\r\n                <li className={currentPage!==pageNumber.length?s.prevNext:s.noPrevBut} onClick={handleNextBut}>\r\n                    {/* <button className={currentPage!==pageNumber.length?s.prevBut:s.noPrevBut} >Next</button> */}\r\n                    Next\r\n                </li>\r\n            \r\n            \r\n            </ul>\r\n            \r\n        </nav>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,eAAe,SAASC,QAAT,OAAyJ;EAAA;;EAAA,IAAtI;IAACC,cAAD;IAAiBC,UAAjB;IAA6BC,QAA7B;IAAuCC,WAAvC;IAAoDC,cAApD;IAAmEC,kBAAnE;IAAsFC,kBAAtF;IAAyGC,aAAzG;IAAuHC;EAAvH,CAAsI;EACpK,MAAMC,UAAU,GAAG,EAAnB;EACA,MAAMC,OAAO,GAAGZ,WAAW,CAACa,KAAK,IAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,YAAf,CAA3B;EACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BJ,OAA5B;;EACA,KAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEC,IAAI,CAACC,IAAL,CAAWhB,UAAU,GAAGD,cAAxB,CAAhB,EAA0De,CAAC,EAA3D,EAA8D;IAC1DN,UAAU,CAACS,IAAX,CAAgBH,CAAhB;EACH;;EACDpB,SAAS,CAAC,MAAI;IACVkB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BR,kBAAkB,GAAC,CAA/C;EACH,CAFQ,EAEP,EAFO,CAAT;EAIA,MAAMa,eAAe,GAAE,CAAvB,CAXoK,CAW1I;EAC1B;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAGA;;EAEA,oBACI;IAAA,uBAEI;MAAI,SAAS,EAAEvB,CAAC,CAACwB,WAAjB;MAAA,wBACI;QAAI,SAAS,EAAEjB,WAAW,GAAC,CAAZ,GAAcP,CAAC,CAACyB,QAAhB,GAAyBzB,CAAC,CAAC0B,SAA1C;QAAqD,OAAO,EAAEd,aAA9D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAMKC,UAAU,CAACc,GAAX,CAAgBC,MAAD,IAAU;QAE1B,IAAGA,MAAM,GAAGlB,kBAAkB,GAAC,CAA5B,IAAiCkB,MAAM,GAAGnB,kBAA7C,EACA,oBACI;UAEJ,EAAE,EAAEmB,MAFA;UAGJ,OAAO,EAAE,MAAItB,QAAQ,CAACsB,MAAD,CAHjB;UAIJ,SAAS,EAAErB,WAAW,KAAKqB,MAAhB,GAAwB5B,CAAC,CAAC6B,MAA1B,GAAmC7B,CAAC,CAAC8B,KAJ5C;UAAA,UAMCF;QAND,GACCA,MADD;UAAA;UAAA;UAAA;QAAA,QADJ;MAUC,CAbA,CANL,eA0BI;QAAI,SAAS,EAAErB,WAAW,KAAGM,UAAU,CAACkB,MAAzB,GAAgC/B,CAAC,CAACyB,QAAlC,GAA2CzB,CAAC,CAAC0B,SAA5D;QAAuE,OAAO,EAAEf,aAAhF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH;;GAtFuBR,Q;UAEJD,W;;;KAFIC,Q"},"metadata":{},"sourceType":"module"}