{"ast":null,"code":"import axios from 'axios';\nexport const POST_INIT_RECIPES = 'POST_INIT_RECIPES';\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPES_DETAIL';\nexport const DELETE_DETAIL = 'DELETE_DETAIL';\nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\nexport const DELETE_FILTER = 'DELETE_FILTER';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const SEARCH_BY_NAME = 'SEARCH_BY_NAME';\nexport const POST_NEW_RECIPE = 'POST_NEW_RECIPE';\nexport const GET_ALL_DIETS = 'GET_ALL_DIETS';\nexport const ORDER_BY_HEALTHSCORE = 'ORDER_BY_HEALTHSCORE';\nexport const SAVE_PAGE = 'SAVE_PAGE';\nexport const MAX_PAGE_NUMBER = 'MAX_PAGE_NUMBER';\nexport const MIN_PAGE_NUMBER = 'MIN_PAGE_NUMBER';\nexport const RESET_MAX_MIN = 'RESET_MAX_MIN;';\nexport const RESET_PAGE = 'RESET_PAGE';\nexport const FILTER_DONE = 'FILTER_DONE';\nexport const RESET_SEARCH = 'RESET_SEARCH';\nexport const SET_TITLE = 'SET_TITLE'; //aca armo la ruta\n\nexport function postInitRecipes() {\n  return function (dispatch) {\n    return axios.post('http://localhost:3001/').then(json => {\n      dispatch({\n        type: POST_INIT_RECIPES,\n        payload: json.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: POST_INIT_RECIPES,\n        payload: err.data\n      });\n    });\n  };\n}\n;\nexport function getAllRecipes() {\n  return function (dispatch) {\n    return axios.get('http://localhost:3001/recipe/all').then(json => {\n      dispatch({\n        type: GET_ALL_RECIPES,\n        payload: json.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_ALL_RECIPES,\n        payload: err.data\n      });\n    });\n  };\n}\nexport function deleteDetail() {\n  return {\n    type: DELETE_DETAIL\n  };\n}\nexport function getRecipeDetail(id) {\n  return function (dispatch) {\n    return axios.get(`http://localhost:3001/recipe/${id}`).then(json => {\n      // console.log('JSON', json.data)\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: json.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: err.data\n      });\n    });\n  };\n}\nexport function filterRecipsByDiet(payload) {\n  return {\n    type: FILTER_BY_DIET,\n    payload\n  };\n}\nexport function deleteFilter() {\n  // para resetear el filtro cuando actualiza\n  return {\n    type: DELETE_FILTER\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n}\nexport function orderByHealthScore(payload) {\n  return {\n    type: ORDER_BY_HEALTHSCORE,\n    payload\n  };\n}\nexport function searchByName(payload) {\n  return function (dispatch) {\n    return axios.get(`http://localhost:3001/recipe?name=${payload}`).then(json => {\n      dispatch({\n        type: SEARCH_BY_NAME,\n        payload: json.data\n      });\n    }).catch(err => {// alert('No recipe found')\n    });\n  };\n}\nexport function postNewRecipe(payload) {\n  return function (dispatch) {\n    return axios.post('http://localhost:3001/recipe/asd', payload).then(json => {\n      dispatch({\n        // o return json\n        type: POST_NEW_RECIPE,\n        payload: json.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: POST_NEW_RECIPE,\n        payload: err.data\n      });\n    });\n  };\n}\nexport function getAllDiets() {\n  return function (dispatch) {\n    return axios.get('http://localhost:3001/diet').then(json => {\n      dispatch({\n        type: GET_ALL_DIETS,\n        payload: json.data\n      });\n    }).catch(err => {\n      dispatch({\n        type: GET_ALL_DIETS,\n        payload: err.data\n      });\n    });\n  };\n}\nexport function savePage(payload) {\n  return {\n    type: SAVE_PAGE,\n    payload\n  };\n}\nexport function maxPageNumber(payload) {\n  return {\n    type: MAX_PAGE_NUMBER,\n    payload\n  };\n}\nexport function minPageNumber(payload) {\n  return {\n    type: MIN_PAGE_NUMBER,\n    payload\n  };\n}\nexport function resetMaxMin() {\n  return {\n    type: RESET_MAX_MIN\n  };\n}\nexport function resetPage() {\n  return {\n    type: RESET_PAGE\n  };\n}\nexport function filterDone() {\n  return {\n    type: FILTER_DONE\n  };\n}\nexport function resetSearch() {\n  return {\n    type: RESET_SEARCH\n  };\n}\nexport function setTitle(payload) {\n  return {\n    type: SET_TITLE,\n    payload\n  };\n}","map":{"version":3,"names":["axios","POST_INIT_RECIPES","GET_ALL_RECIPES","GET_RECIPE_DETAIL","DELETE_DETAIL","FILTER_BY_DIET","DELETE_FILTER","ORDER_BY_NAME","SEARCH_BY_NAME","POST_NEW_RECIPE","GET_ALL_DIETS","ORDER_BY_HEALTHSCORE","SAVE_PAGE","MAX_PAGE_NUMBER","MIN_PAGE_NUMBER","RESET_MAX_MIN","RESET_PAGE","FILTER_DONE","RESET_SEARCH","SET_TITLE","postInitRecipes","dispatch","post","then","json","type","payload","data","catch","err","getAllRecipes","get","deleteDetail","getRecipeDetail","id","filterRecipsByDiet","deleteFilter","orderByName","orderByHealthScore","searchByName","postNewRecipe","getAllDiets","savePage","maxPageNumber","minPageNumber","resetMaxMin","resetPage","filterDone","resetSearch","setTitle"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\nexport const POST_INIT_RECIPES = 'POST_INIT_RECIPES';\r\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\r\nexport const GET_RECIPE_DETAIL = 'GET_RECIPES_DETAIL';\r\nexport const DELETE_DETAIL = 'DELETE_DETAIL';\r\nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\r\nexport const SEARCH_BY_NAME = 'SEARCH_BY_NAME';\r\nexport const POST_NEW_RECIPE = 'POST_NEW_RECIPE';\r\nexport const GET_ALL_DIETS = 'GET_ALL_DIETS';\r\nexport const ORDER_BY_HEALTHSCORE = 'ORDER_BY_HEALTHSCORE';\r\nexport const SAVE_PAGE = 'SAVE_PAGE';\r\nexport const MAX_PAGE_NUMBER = 'MAX_PAGE_NUMBER';\r\nexport const MIN_PAGE_NUMBER = 'MIN_PAGE_NUMBER';\r\nexport const RESET_MAX_MIN = 'RESET_MAX_MIN;';\r\nexport const RESET_PAGE = 'RESET_PAGE';\r\nexport const FILTER_DONE = 'FILTER_DONE';\r\nexport const RESET_SEARCH = 'RESET_SEARCH';\r\nexport const SET_TITLE = 'SET_TITLE';\r\n\r\n//aca armo la ruta\r\n\r\nexport function postInitRecipes () {\r\n  return function(dispatch) {\r\n        \r\n      return axios.post('http://localhost:3001/')\r\n        .then(json => {\r\n          dispatch({ \r\n            type: POST_INIT_RECIPES, \r\n            payload: json.data,\r\n        });\r\n        })\r\n        .catch(err=>{\r\n          dispatch({ \r\n            type: POST_INIT_RECIPES, \r\n            payload: err.data,\r\n        })\r\n        })\r\n    };\r\n  };\r\n\r\nexport function getAllRecipes (){\r\n  return function (dispatch){\r\n    return axios.get('http://localhost:3001/recipe/all') \r\n      .then(json=>{\r\n        dispatch({\r\n          type: GET_ALL_RECIPES,\r\n          payload: json.data\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        dispatch({ \r\n          type: GET_ALL_RECIPES, \r\n          payload: err.data,\r\n      })\r\n      })\r\n  }\r\n}\r\n\r\nexport function deleteDetail(){\r\n  return{\r\n      type: DELETE_DETAIL,\r\n  }\r\n}\r\n\r\nexport function getRecipeDetail (id){\r\n  return function (dispatch){\r\n    return axios.get(`http://localhost:3001/recipe/${id}`)\r\n      .then(json=>{\r\n        // console.log('JSON', json.data)\r\n        dispatch({\r\n          type: GET_RECIPE_DETAIL,\r\n          payload: json.data\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        dispatch({ \r\n          type: GET_RECIPE_DETAIL, \r\n          payload: err.data,\r\n      })\r\n      })\r\n  }\r\n}\r\n\r\nexport function filterRecipsByDiet(payload){\r\n  return {\r\n    type: FILTER_BY_DIET,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function deleteFilter(){ // para resetear el filtro cuando actualiza\r\n  return{\r\n    type: DELETE_FILTER\r\n  }\r\n}\r\n\r\nexport function orderByName(payload){\r\n  return{\r\n    type: ORDER_BY_NAME,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function orderByHealthScore(payload){\r\n  return{\r\n    type: ORDER_BY_HEALTHSCORE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function searchByName(payload){\r\n  return function(dispatch) {\r\n    return axios.get(`http://localhost:3001/recipe?name=${payload}`)\r\n        .then(json => {\r\n          dispatch({ \r\n            type: SEARCH_BY_NAME, \r\n            payload: json.data,\r\n        });\r\n        })\r\n        .catch(err=>{\r\n          // alert('No recipe found')\r\n          \r\n        })\r\n      }\r\n}\r\n\r\nexport function postNewRecipe (payload){\r\n  return function (dispatch){\r\n    return axios.post('http://localhost:3001/recipe/asd', payload)\r\n      .then((json)=>{\r\n        dispatch({                 // o return json\r\n          type: POST_NEW_RECIPE,\r\n          payload:json.data\r\n        })}\r\n      )\r\n      .catch(err=>{\r\n        dispatch({ \r\n          type: POST_NEW_RECIPE, \r\n          payload: err.data,\r\n      })\r\n      })\r\n  } \r\n}\r\n\r\nexport function getAllDiets(){\r\n  return function (dispatch){\r\n    return axios.get('http://localhost:3001/diet')\r\n      .then(json=>{\r\n        dispatch({\r\n          type: GET_ALL_DIETS,\r\n          payload: json.data\r\n        })\r\n      })\r\n      .catch(err=>{\r\n        dispatch({ \r\n          type: GET_ALL_DIETS, \r\n          payload: err.data,\r\n      })\r\n      })\r\n  }\r\n}\r\n\r\nexport function savePage(payload){\r\n  return{\r\n    type: SAVE_PAGE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function maxPageNumber(payload){\r\n  return{\r\n    type: MAX_PAGE_NUMBER,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function minPageNumber(payload){\r\n  return {\r\n    type: MIN_PAGE_NUMBER,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function resetMaxMin(){\r\n  return{\r\n    type: RESET_MAX_MIN\r\n  }\r\n}\r\n\r\nexport function resetPage(){\r\n  return{\r\n    type:RESET_PAGE\r\n  }\r\n}\r\nexport function filterDone(){\r\n  return{\r\n    type: FILTER_DONE\r\n  }\r\n}\r\nexport function resetSearch(){\r\n  return{\r\n    type:RESET_SEARCH\r\n  }\r\n}\r\nexport function setTitle(payload){\r\n  return{\r\n    type: SET_TITLE,\r\n    payload\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,oBAA1B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,aAAa,GAAG,gBAAtB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB,C,CAEP;;AAEA,OAAO,SAASC,eAAT,GAA4B;EACjC,OAAO,UAASC,QAAT,EAAmB;IAEtB,OAAOrB,KAAK,CAACsB,IAAN,CAAW,wBAAX,EACJC,IADI,CACCC,IAAI,IAAI;MACZH,QAAQ,CAAC;QACPI,IAAI,EAAExB,iBADC;QAEPyB,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANI,EAOJC,KAPI,CAOEC,GAAG,IAAE;MACVR,QAAQ,CAAC;QACPI,IAAI,EAAExB,iBADC;QAEPyB,OAAO,EAAEG,GAAG,CAACF;MAFN,CAAD,CAAR;IAID,CAZI,CAAP;EAaD,CAfH;AAgBC;AAAA;AAEH,OAAO,SAASG,aAAT,GAAyB;EAC9B,OAAO,UAAUT,QAAV,EAAmB;IACxB,OAAOrB,KAAK,CAAC+B,GAAN,CAAU,kCAAV,EACJR,IADI,CACCC,IAAI,IAAE;MACVH,QAAQ,CAAC;QACPI,IAAI,EAAEvB,eADC;QAEPwB,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANI,EAOJC,KAPI,CAOEC,GAAG,IAAE;MACVR,QAAQ,CAAC;QACPI,IAAI,EAAEvB,eADC;QAEPwB,OAAO,EAAEG,GAAG,CAACF;MAFN,CAAD,CAAR;IAID,CAZI,CAAP;EAaD,CAdD;AAeD;AAED,OAAO,SAASK,YAAT,GAAuB;EAC5B,OAAM;IACFP,IAAI,EAAErB;EADJ,CAAN;AAGD;AAED,OAAO,SAAS6B,eAAT,CAA0BC,EAA1B,EAA6B;EAClC,OAAO,UAAUb,QAAV,EAAmB;IACxB,OAAOrB,KAAK,CAAC+B,GAAN,CAAW,gCAA+BG,EAAG,EAA7C,EACJX,IADI,CACCC,IAAI,IAAE;MACV;MACAH,QAAQ,CAAC;QACPI,IAAI,EAAEtB,iBADC;QAEPuB,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CAPI,EAQJC,KARI,CAQEC,GAAG,IAAE;MACVR,QAAQ,CAAC;QACPI,IAAI,EAAEtB,iBADC;QAEPuB,OAAO,EAAEG,GAAG,CAACF;MAFN,CAAD,CAAR;IAID,CAbI,CAAP;EAcD,CAfD;AAgBD;AAED,OAAO,SAASQ,kBAAT,CAA4BT,OAA5B,EAAoC;EACzC,OAAO;IACLD,IAAI,EAAEpB,cADD;IAELqB;EAFK,CAAP;AAID;AAED,OAAO,SAASU,YAAT,GAAuB;EAAE;EAC9B,OAAM;IACJX,IAAI,EAAEnB;EADF,CAAN;AAGD;AAED,OAAO,SAAS+B,WAAT,CAAqBX,OAArB,EAA6B;EAClC,OAAM;IACJD,IAAI,EAAElB,aADF;IAEJmB;EAFI,CAAN;AAID;AAED,OAAO,SAASY,kBAAT,CAA4BZ,OAA5B,EAAoC;EACzC,OAAM;IACJD,IAAI,EAAEd,oBADF;IAEJe;EAFI,CAAN;AAID;AAED,OAAO,SAASa,YAAT,CAAsBb,OAAtB,EAA8B;EACnC,OAAO,UAASL,QAAT,EAAmB;IACxB,OAAOrB,KAAK,CAAC+B,GAAN,CAAW,qCAAoCL,OAAQ,EAAvD,EACFH,IADE,CACGC,IAAI,IAAI;MACZH,QAAQ,CAAC;QACPI,IAAI,EAAEjB,cADC;QAEPkB,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANE,EAOFC,KAPE,CAOIC,GAAG,IAAE,CACV;IAED,CAVE,CAAP;EAWG,CAZL;AAaD;AAED,OAAO,SAASW,aAAT,CAAwBd,OAAxB,EAAgC;EACrC,OAAO,UAAUL,QAAV,EAAmB;IACxB,OAAOrB,KAAK,CAACsB,IAAN,CAAW,kCAAX,EAA+CI,OAA/C,EACJH,IADI,CACEC,IAAD,IAAQ;MACZH,QAAQ,CAAC;QAAkB;QACzBI,IAAI,EAAEhB,eADC;QAEPiB,OAAO,EAACF,IAAI,CAACG;MAFN,CAAD,CAAR;IAGG,CALA,EAOJC,KAPI,CAOEC,GAAG,IAAE;MACVR,QAAQ,CAAC;QACPI,IAAI,EAAEhB,eADC;QAEPiB,OAAO,EAAEG,GAAG,CAACF;MAFN,CAAD,CAAR;IAID,CAZI,CAAP;EAaD,CAdD;AAeD;AAED,OAAO,SAASc,WAAT,GAAsB;EAC3B,OAAO,UAAUpB,QAAV,EAAmB;IACxB,OAAOrB,KAAK,CAAC+B,GAAN,CAAU,4BAAV,EACJR,IADI,CACCC,IAAI,IAAE;MACVH,QAAQ,CAAC;QACPI,IAAI,EAAEf,aADC;QAEPgB,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANI,EAOJC,KAPI,CAOEC,GAAG,IAAE;MACVR,QAAQ,CAAC;QACPI,IAAI,EAAEf,aADC;QAEPgB,OAAO,EAAEG,GAAG,CAACF;MAFN,CAAD,CAAR;IAID,CAZI,CAAP;EAaD,CAdD;AAeD;AAED,OAAO,SAASe,QAAT,CAAkBhB,OAAlB,EAA0B;EAC/B,OAAM;IACJD,IAAI,EAAEb,SADF;IAEJc;EAFI,CAAN;AAID;AAED,OAAO,SAASiB,aAAT,CAAuBjB,OAAvB,EAA+B;EACpC,OAAM;IACJD,IAAI,EAAEZ,eADF;IAEJa;EAFI,CAAN;AAID;AAED,OAAO,SAASkB,aAAT,CAAuBlB,OAAvB,EAA+B;EACpC,OAAO;IACLD,IAAI,EAAEX,eADD;IAELY;EAFK,CAAP;AAID;AAED,OAAO,SAASmB,WAAT,GAAsB;EAC3B,OAAM;IACJpB,IAAI,EAAEV;EADF,CAAN;AAGD;AAED,OAAO,SAAS+B,SAAT,GAAoB;EACzB,OAAM;IACJrB,IAAI,EAACT;EADD,CAAN;AAGD;AACD,OAAO,SAAS+B,UAAT,GAAqB;EAC1B,OAAM;IACJtB,IAAI,EAAER;EADF,CAAN;AAGD;AACD,OAAO,SAAS+B,WAAT,GAAsB;EAC3B,OAAM;IACJvB,IAAI,EAACP;EADD,CAAN;AAGD;AACD,OAAO,SAAS+B,QAAT,CAAkBvB,OAAlB,EAA0B;EAC/B,OAAM;IACJD,IAAI,EAAEN,SADF;IAEJO;EAFI,CAAN;AAID"},"metadata":{},"sourceType":"module"}