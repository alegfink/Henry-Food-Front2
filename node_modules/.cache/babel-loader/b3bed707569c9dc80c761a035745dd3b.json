{"ast":null,"code":"import axios from 'axios';\nexport const POST_INIT_RECIPES = 'POST_INIT_RECIPES';\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\nexport const GET_RECIPE_DETAIL = 'GET_RECIPES_DETAIL';\nexport const DELETE_DETAIL = 'DELETE_DETAIL';\nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\nexport const DELETE_FILTER = 'DELETE_FILTER';\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\nexport const SEARCH_BY_NAME = 'SEARCH_BY_NAME'; //aca armo la ruta\n\nexport function postInitRecipes() {\n  return function (dispatch) {\n    return axios.post('http://localhost:3001/').then(json => {\n      dispatch({\n        type: POST_INIT_RECIPES,\n        payload: json.data\n      });\n    });\n  };\n}\n;\nexport function getAllRecipes() {\n  return function (dispatch) {\n    return axios.get('http://localhost:3001/recipe/all').then(json => {\n      dispatch({\n        type: GET_ALL_RECIPES,\n        payload: json.data\n      });\n    });\n  };\n}\nexport function deleteDetail() {\n  return {\n    type: DELETE_DETAIL\n  };\n}\nexport function getRecipeDetail(id) {\n  return function (dispatch) {\n    return axios.get(`http://localhost:3001/recipe/${id}`).then(json => {\n      // console.log('JSON', json.data)\n      dispatch({\n        type: GET_RECIPE_DETAIL,\n        payload: json.data\n      });\n    });\n  };\n}\nexport function filterRecipsByDiet(payload) {\n  return {\n    type: FILTER_BY_DIET,\n    payload\n  };\n}\nexport function deleteFilter() {\n  // para resetear el filtro cuando actualiza\n  return {\n    type: DELETE_FILTER\n  };\n}\nexport function orderByName(payload) {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n}\nexport function searchByName(payload) {\n  return function (dispatch) {\n    return axios.post('http://localhost:3001/recipe?name').then(json => {\n      dispatch({\n        type: SEARCH_BY_NAME,\n        payload: json.data\n      });\n    });\n  };\n}","map":{"version":3,"names":["axios","POST_INIT_RECIPES","GET_ALL_RECIPES","GET_RECIPE_DETAIL","DELETE_DETAIL","FILTER_BY_DIET","DELETE_FILTER","ORDER_BY_NAME","SEARCH_BY_NAME","postInitRecipes","dispatch","post","then","json","type","payload","data","getAllRecipes","get","deleteDetail","getRecipeDetail","id","filterRecipsByDiet","deleteFilter","orderByName","searchByName"],"sources":["C:/Users/Ale/Desktop/PI-Food-main/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\nexport const POST_INIT_RECIPES = 'POST_INIT_RECIPES';\r\nexport const GET_ALL_RECIPES = 'GET_ALL_RECIPES';\r\nexport const GET_RECIPE_DETAIL = 'GET_RECIPES_DETAIL';\r\nexport const DELETE_DETAIL = 'DELETE_DETAIL';\r\nexport const FILTER_BY_DIET = 'FILTER_BY_DIET';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\r\nexport const SEARCH_BY_NAME = 'SEARCH_BY_NAME';\r\n\r\n//aca armo la ruta\r\n\r\nexport function postInitRecipes () {\r\n  return function(dispatch) {\r\n        \r\n      return axios.post('http://localhost:3001/')\r\n        .then(json => {\r\n          dispatch({ \r\n            type: POST_INIT_RECIPES, \r\n            payload: json.data,\r\n        });\r\n        });\r\n    };\r\n  };\r\n\r\nexport function getAllRecipes (){\r\n  return function (dispatch){\r\n    return axios.get('http://localhost:3001/recipe/all') \r\n      .then(json=>{\r\n        dispatch({\r\n          type: GET_ALL_RECIPES,\r\n          payload: json.data\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport function deleteDetail(){\r\n  return{\r\n      type: DELETE_DETAIL,\r\n  }\r\n}\r\n\r\nexport function getRecipeDetail (id){\r\n  return function (dispatch){\r\n    return axios.get(`http://localhost:3001/recipe/${id}`)\r\n      .then(json=>{\r\n        // console.log('JSON', json.data)\r\n        dispatch({\r\n          type: GET_RECIPE_DETAIL,\r\n          payload: json.data\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport function filterRecipsByDiet(payload){\r\n  return {\r\n    type: FILTER_BY_DIET,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function deleteFilter(){ // para resetear el filtro cuando actualiza\r\n  return{\r\n    type: DELETE_FILTER\r\n  }\r\n}\r\n\r\nexport function orderByName(payload){\r\n  return{\r\n    type: ORDER_BY_NAME,\r\n    payload\r\n  }\r\n}\r\n\r\nexport function searchByName(payload){\r\n  return function(dispatch) {\r\n    return axios.post('http://localhost:3001/recipe?name')\r\n        .then(json => {\r\n          dispatch({ \r\n            type: SEARCH_BY_NAME, \r\n            payload: json.data,\r\n        });\r\n        });\r\n      }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,oBAA1B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AAEA,OAAO,SAASC,eAAT,GAA4B;EACjC,OAAO,UAASC,QAAT,EAAmB;IAEtB,OAAOV,KAAK,CAACW,IAAN,CAAW,wBAAX,EACJC,IADI,CACCC,IAAI,IAAI;MACZH,QAAQ,CAAC;QACPI,IAAI,EAAEb,iBADC;QAEPc,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANI,CAAP;EAOD,CATH;AAUC;AAAA;AAEH,OAAO,SAASC,aAAT,GAAyB;EAC9B,OAAO,UAAUP,QAAV,EAAmB;IACxB,OAAOV,KAAK,CAACkB,GAAN,CAAU,kCAAV,EACJN,IADI,CACCC,IAAI,IAAE;MACVH,QAAQ,CAAC;QACPI,IAAI,EAAEZ,eADC;QAEPa,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANI,CAAP;EAOD,CARD;AASD;AAED,OAAO,SAASG,YAAT,GAAuB;EAC5B,OAAM;IACFL,IAAI,EAAEV;EADJ,CAAN;AAGD;AAED,OAAO,SAASgB,eAAT,CAA0BC,EAA1B,EAA6B;EAClC,OAAO,UAAUX,QAAV,EAAmB;IACxB,OAAOV,KAAK,CAACkB,GAAN,CAAW,gCAA+BG,EAAG,EAA7C,EACJT,IADI,CACCC,IAAI,IAAE;MACV;MACAH,QAAQ,CAAC;QACPI,IAAI,EAAEX,iBADC;QAEPY,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CAPI,CAAP;EAQD,CATD;AAUD;AAED,OAAO,SAASM,kBAAT,CAA4BP,OAA5B,EAAoC;EACzC,OAAO;IACLD,IAAI,EAAET,cADD;IAELU;EAFK,CAAP;AAID;AAED,OAAO,SAASQ,YAAT,GAAuB;EAAE;EAC9B,OAAM;IACJT,IAAI,EAAER;EADF,CAAN;AAGD;AAED,OAAO,SAASkB,WAAT,CAAqBT,OAArB,EAA6B;EAClC,OAAM;IACJD,IAAI,EAAEP,aADF;IAEJQ;EAFI,CAAN;AAID;AAED,OAAO,SAASU,YAAT,CAAsBV,OAAtB,EAA8B;EACnC,OAAO,UAASL,QAAT,EAAmB;IACxB,OAAOV,KAAK,CAACW,IAAN,CAAW,mCAAX,EACFC,IADE,CACGC,IAAI,IAAI;MACZH,QAAQ,CAAC;QACPI,IAAI,EAAEN,cADC;QAEPO,OAAO,EAAEF,IAAI,CAACG;MAFP,CAAD,CAAR;IAID,CANE,CAAP;EAOG,CARL;AASD"},"metadata":{},"sourceType":"module"}